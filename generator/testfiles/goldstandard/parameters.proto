syntax = "proto3";

package parameters;

import "google/api/annotations.proto";

import "google/protobuf/descriptor.proto";

import "google/protobuf/empty.proto";

message Parameter1 {
  int64 param7 = 1;
}

message Parameter2 {
  int64 param8 = 1;
}

message TestParameterQueryRequest {
  int32 param1 = 1;
}

message TestParameterQueryEnumRequest {
  repeated Param2 param2 = 1;

  enum Param2 {
    DINGO = 0;

    HUSKY = 1;

    RETRIEVER = 2;
  }
}

message TestParameterPathRequest {
  string param3 = 1;
}

message TestParameterPathEnumRequest {
  Param4 param4 = 1;

  enum Param4 {
    DINGO = 0;

    HUSKY = 1;
  }
}

message TestParameterMultiplePathRequest {
  string param5 = 1;

  string param6 = 2;
}

message TestParameterReferenceRequest {
  Parameter1 parameter1 = 1;
}

service Parameters {
  rpc TestParameterQuery ( TestParameterQueryRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterQuery"  };
  }

  rpc TestParameterQueryEnum ( TestParameterQueryEnumRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterQueryEnum"  };
  }

  rpc TestParameterPath ( TestParameterPathRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterPath/{param1}"  };
  }

  rpc TestParameterPathEnum ( TestParameterPathEnumRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterPathEnum/{param1}"  };
  }

  rpc TestParameterMultiplePath ( TestParameterMultiplePathRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterMultiplePath/{param1}/{param2}"  };
  }

  rpc TestParameterReference ( TestParameterReferenceRequest ) returns ( google.protobuf.Empty ) {
    option (google.api.http) = { get:"/testParameterReference"  };
  }
}

